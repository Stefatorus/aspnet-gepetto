@model ChatViewModel

@{
    ViewData["Title"] = "Chats";
}

<div class="container-fluid">
    <div class="row">
        <!-- Left Sidebar -->
        <div class="col-md-3">
            <div class="d-flex flex-column">
                <button class="btn btn-primary mb-3" onclick="location.href='@Url.Action("CreateConversation")'">Add New
                    Conversation
                </button>
                <div class="list-group" id="conversationList" style="overflow-y: auto; max-height: 80vh;">
                    @foreach (var conversation in Model.Conversations)
                    {
                        <a href="javascript:void(0);" class="list-group-item list-group-item-action"
                           onclick="loadConversation(@conversation.Id)">
                            @conversation.Title
                        </a>
                    }
                </div>
            </div>
        </div>

        <!-- Main Content Area -->
        <div class="col-md-9">
            <div id="chatWindow" class="d-flex flex-column" style="display: none; height: 80vh;">
                <h2 id="conversationTitle"></h2>
                <div id="messages" class="flex-grow-1 overflow-auto border p-3 mb-3" style="height: 60vh;">
                    @* Messages will be dynamically loaded here *@
                </div>
                <div class="input-group mb-3">
                    <select id="modelSelector" class="form-select">
                        @foreach (var aiModel in Model.AvailableModels)
                        {
                            <option value="@aiModel">@aiModel</option>
                        }
                    </select>
                </div>
                <div class="input-group">
                    <textarea id="messageInput" class="form-control" placeholder="Type your message here..."></textarea>
                    <button class="btn btn-primary" onclick="sendMessage()">Send</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function loadConversation(conversationId) {
            // Remove the 'selected-conversation' class from all items
            document.querySelectorAll('.list-group-item').forEach(item => {
                item.classList.remove('selected-conversation');
            });

            // Add the 'selected-conversation' class to the clicked item
            document.querySelector(`a[onclick="loadConversation(${conversationId})"]`).classList.add('selected-conversation');

            fetch(`/Chat/GetMessages?conversationId=${conversationId}`)
                .then(response => response.json())
                .then(messages => {
                    document.getElementById("chatWindow").style.display = "flex";
                    document.getElementById("messages").innerHTML = "";
                    messages.forEach(message => {
                        var messageElement = document.createElement("div");
                        messageElement.textContent = `${message.Sender}: ${message.Content} (${new Date(message.Timestamp).toLocaleString()})`;
                        document.getElementById("messages").appendChild(messageElement);
                    });
                });
        }

        function sendMessage() {
            var messageContent = document.getElementById("messageInput").value;
            var selectedModel = document.getElementById("modelSelector").value;
            var conversationId = document.querySelector('.selected-conversation').getAttribute('onclick').match(/\d+/)[0];

            fetch(`/Chat/SendMessage`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    conversationId: conversationId,
                    messageContent: messageContent,
                    model: selectedModel
                })
            })
                .then(response => response.json())
                .then(responseMessage => {
                    var messageElement = document.createElement("div");
                    messageElement.textContent = `${responseMessage.Sender}: ${responseMessage.Content} (${new Date(responseMessage.Timestamp).toLocaleString()})`;
                    document.getElementById("messages").appendChild(messageElement);
                    document.getElementById("messageInput").value = "";
                });
        }
    </script>
}

<style>
    .selected-conversation {
        background-color: lightgreen;
    }
</style>